setwd("C:/Users/angel/DataAnalytics/Class/R_Analysis/01_Demo")
demo_table4 <- read.csv(file = 'Vehicle_Data.xlsx', check.names = F, stringsAsFactors = F)
demo_table4 <- readxl(file = 'Vehicle_Data.xlsx', check.names = F, stringsAsFactors = F)
?read.delim()
demo_table4 <- read.delim(file = 'Vehicle_Data.xlsx', check.names = F, stringsAsFactors = F)
demo_table4 <- read.file(file = 'Vehicle_Data.xlsx', check.names = F, stringsAsFactors = F)
View(demo_table4)
install.packages("readxl")
library("readxl")
demo_table4 <- read_excel(Vehicle_Data.xlsx)
demo_table4 <- read_excel("Vehicle_Data.xlsx")
View(demo_table4)
demo_table3 <- read.csv(file = 'demo2.csv', check.names = F, stringsAsFactors = F)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(demo_table3)
library(jsonlite)
demo_table3 <- read.csv(file = 'demo2.csv', check.names = F, stringsAsFactors = F)
demo_table3 <- read.csv(file = 'demo2.csv', check.names = F, stringsAsFactors = F)
View(demo_table3)
View(demo_table3)
library(tidyverse)
?mutate()
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
View(long_table)
demo_table <- demo_table %>% mutate(Mileage_per_Year = Total_Miles / (2020-Year), IsActive = TRUE)
demo_table <- read.csv(file = 'demo.csv', check.names = F, stringsAsFactors = F)
View(demo_table)
demo_table <- demo_table %>% mutate(Mileage_per_Year = Total_Miles / (2020-Year), IsActive = TRUE)
View(demo_table)
?gather()
demo_table3 <- read.csv(file = 'demo2.csv', check.names = F, stringsAsFactors = F)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
?spread(0)
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
all.equal(demo_table3,wide_table)
demo_table3 <- demo_table3[,order(colnames(demo_table3))]
wide_table <- wide_table[,order(colnames(wide_table))]
all.equal(demo_table3,wide_table)
?ggplot()
head(mps)
head(mpg)
plt <- ggplot(mpg,aes(x=class))
View(plt)
plt + geom_bar()
?geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(vehicle_count=n())
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=vehicle_count))
plt + geom_col()
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") #plot bar plot with labels
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
>theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
>theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset")
theme(axis.text.x=element_text(angle=45,hjust=1))
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Datatset") + theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy)) #create summary table
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
View(mpg_summary)
plt + geom_line()
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty)) #import dataset into ggplot2
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class")
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive")
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive")
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv,size=cty))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive",size="City Fuel-Efficiency (MPG)")
plt <- ggplot(mpg,aes(y=hwy)
plt + geom_boxplot()
plt <- ggplot(mpg,aes(y=hwy)
)
plt + geom_boxplot()
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot()
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt <- ggplot(mpg,aes(x=manufacturer,y=cty))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy))
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)")
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy))
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) + geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ))
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size")
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ))
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine))
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy))
head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
?facet_wrap()
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type))
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) +
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer")
# Qualitative Test for Normality
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
# Quantitative Test for Normality
shapiro.test(mtcars$wt)
?sample_n()
# Generating Random Samples
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
# Generating Random Samples
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2 & normalize right skewed dataset with log10
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
?t.test()
?t.test()
# t-test
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
# Two Sample t-test
sample_table <- population_table %>% sample_n(50) #generate 50 randomly sampled data points
sample_table2 <- population_table %>% sample_n(50) #generate another 50 randomly sampled data points
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
# Paired t-test
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T) #compare the mean difference between two samples
?aov()
# ANOVA Test (Analysis of Variance)
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars data set
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt)) #compare means across multiple levels
?cor()
# Pearson Correlation Coefficient
head(mtcars)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import data set into ggplot2
plt + geom_point() #create scatter plot
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
head(used_cars)
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
plt + geom_point() #create a scatter plot
cor(used_cars$Miles_Driven,used_cars$Selling_Price)
# Correlation Matrix
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
cor(used_matrix)
?lm()
# Linear Models (need strong correlation (r>0.7))
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
# Multiple Linear Regression
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
# Categorical Data
# Frequency Data
# Chi-Squared Test
?chisq.test()
# Contingency Table
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
